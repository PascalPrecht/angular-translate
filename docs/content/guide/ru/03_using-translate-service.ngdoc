@ngdoc overview
@name Сервис $translate
@description

# Сервис $translate

`angular-translate` предоставляет несколько вариантов перевода контента вашего приложения. Одним из
них является непосредственное использование предоставляемого сервиса `$translate`. Скорее всего, вы
не будете использовать этот подход, так как он сильно привязывает контроллеры и сервисы вашего
приложения к переводимому контенту. Однако оказалось, что есть случаи, когда может понадобиться 
возможность перевода содержимого с помощью сервиса `$translate`.

Просто представьте случай, что вам нужно перевести содержимое тега `<title>` в вашем HTML документе.
`<title>` никогда не будет находиться внутри директивы `ng-app`, а это значит, что он находится за 
пределами мира Angular. Тогда, для решения этой задачи вам необходимо изменить заголовок приложения
в коде контроллера или сервиса.

### Использование
Тут вам поможет сервис `$translate`. Использовать этот сервис очень просто. Прежде всего, 
нужно внедрить его при помощи внедрения зависимостей (как и любой другой сервис, который вы хотите
использовать в вашем Angular коде). Предположим, что мы хотим расширить приложение, созданное в
главе [Начало работы](#/guide/02_getting-started).

Наш код будет выглядеть примерно так:

<pre>
app.controller('Ctrl', ['$translate', function ($translate) {

}]);
</pre>

Теперь, чтобы перевести свой контент с помощью сервиса `$translate`, вам необходимо передать ранее
зарегистрированный при помощи `$translateProvider` идентификатор перевода и он вернет конкретный
перевод этого идентификатора. Также, чтобы отобразить переведенные значения в представлении, мы
внедрили `$scope` в наш контроллер:

<pre>
app.controller('Ctrl', ['$scope', '$translate', function ($scope, $translate) {
  $scope.headline = $translate('HEADLINE');
  $scope.paragraph = $translate('PARAGRAPH');
  $scope.namespaced_paragraph = $translate('NAMESPACE.PARAGRAPH');
}]);
</pre>
**Заметьте:** Переводы в пространствах имен доступны как JSON свойства (см. 'NAMESPACE.PARAGRAPH').

Это все. Теперь, для перевода содержимого `<title>` вы можете воспользоваться этим контроллером. Вот
работающий пример:

<doc:example module="myApp">
  <doc:source>
    <script>
      var translations = {
        HEADLINE: 'What an awesome module!',
        PARAGRAPH: 'Srsly!',
        NAMESPACE: {
          PARAGRAPH: 'And it comes with awesome features!'
        }
      };

      var app = angular.module('myApp', ['pascalprecht.translate']);

      app.config(['$translateProvider', function ($translateProvider) {
        // add translation table
        $translateProvider.translations(translations);
      }]);

      app.controller('Ctrl', ['$scope', '$translate', function ($scope, $translate) {
        // expose translation via `$translate` service
        $scope.headline = $translate('HEADLINE');
        $scope.paragraph = $translate('PARAGRAPH');
        $scope.namespaced_paragraph = $translate('NAMESPACE.PARAGRAPH');
      }]);
    </script>
    <div ng-controller="Ctrl">
      <h1>{{headline}}</h1>
      <p>{{paragraph}}</p>
      <p>{{namespaced_paragraph}}</p>
    </div>
  </doc:source>
</doc:example>

<br>
<hr>
<center>Made with unicorn &hearts; love by [PascalPrecht](http://github.com/PascalPrecht)</center>
